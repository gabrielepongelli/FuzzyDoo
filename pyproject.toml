[project]
name = "fuzzydoo"
version = "0.2.0"
description = "A Mutation-Based Structure-Aware Fuzzer for 5G Core Networks"
authors = [{ name = "Gabriele Pongelli", email = "pongelligabriele@gmail.com" }]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.13,<4"

classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Internet",
    "Topic :: Security",
    "Topic :: Software Development",
    "Topic :: Software Development :: Bug Tracking",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Traffic Generation",
    "Typing :: Typed",
]

dependencies = [
    "bitarray (>=3.1.0,<4.0.0)",
    "pycrate (>=0.7.8,<0.8.0)",
    "CryptoMobile @ git+https://github.com/mitshell/CryptoMobile.git@b13e59b",
    "grpcio (>=1.70.0,<2.0.0)",
    "pyyaml (>=6.0.2,<7.0.0)",
    "protobuf (>=5.29.3,<6.0.0)",
]

[project.optional-dependencies]
network-sniffer = ["scapy (>=2.6.1,<3.0.0)"]
network-proxy = ["pysctp (>=0.7.2,<0.8.0)"]
network-function-proxy = [
    "python-iptables (>=1.0.1,<2.0.0)",
    "mitmproxy (>=11.1.3,<12.0.0)",
    "openapi-core (>=0.19.4,<0.20.0)",
    "setuptools (>=75.8.1,<76.0.0)",
    "scapy (>=2.6.1,<3.0.0)",
]
docs = ["pdoc (>=15.0.1,<16.0.0)"]

[build-system]
requires = ["poetry-core", "setuptools", "grpcio-tools<=1.70.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.build]
script = "build.py"
generate-setup-file = true

[tool.poetry.scripts]
container-monitor = 'fuzzydoo.agents.container_monitor:main'
compose-restart = 'fuzzydoo.agents.compose_restart:main'
network-sniffer = 'fuzzydoo.agents.network_sniffer:main'
ueransim-controller = 'fuzzydoo.agents.ueransim_controller:main'
network-proxy = 'fuzzydoo.agents.network_proxy:main'
network-function-proxy = 'fuzzydoo.agents.network_function_proxy:main'
fuzzydoo = 'fuzzydoo.main:main'
